{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Parameters" : {
    "LambdaHandler" : {
      "Type" : "String",
      "Description" : "The lambda handler"
    }
  },

  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "NewCustomerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/newCustomer"
      }
    },
    "NewCustomerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/test/test/1545321448492-2018-12-20T15:57:28.492Z/newCustomer.zip"
        },
        "FunctionName": "newCustomer",
        "Handler": { "Ref": "LambdaHandler"},
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "newCustomerRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 6,
        "Description": "handle new customer event."
      },
      "DependsOn": [
        "NewCustomerLogGroup",
        "newCustomerRole"
      ]
    },
    "NewCustomerLambdaVersionBArS3um1MrojIR4N9J0nq14UZozRogOvlnS8NlBazw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "NewCustomerLambdaFunction"
        },
        "CodeSha256": "rJu25zNIvDQ3O5DSsVA6lYvXACvbpnQ1HX3DqZuAgfE=",
        "Description": "handle new customer event."
      }
    },
    "newCustomerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "AnalyzersDoneRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "someInlinePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn:aws:logs",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "log-group:/aws/lambda/*:*:*"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:dynamodb",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "table/functions_table"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sts:AssumeRole"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "otherInlinePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn:aws:sns",
                          {
                            "Ref": "AWS::Region"
                          },
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "my_topic"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "NewCustomerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "NewCustomerLambdaVersionBArS3um1MrojIR4N9J0nq14UZozRogOvlnS8NlBazw"
      }
    }
  }
}